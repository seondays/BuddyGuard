plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'BuddyGuard'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // OAuth2 의존성 추가
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.assertj:assertj-core:3.24.2'  // AssertJ 추가
    
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0' //Springdoc

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    
    //FCM
    implementation 'com.google.firebase:firebase-admin:7.1.1'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // AWS SDK for S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.530'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

// Additional Querydsl configuration
    def generated = 'src/main/generated'

// Querydsl - Place QClass files to the specific directory
    tasks.withType(JavaCompile) {
        options.getGeneratedSourceOutputDirectory().set(file(generated))
    }

// Querydsl - Add QClass file path to the java source set
    sourceSets {
        main.java.srcDirs += [ generated ]
    }

// Querydsl - Remove QClass directory when doing `gradle clean`
    clean {
        delete file(generated)
    }

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // prometheus
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    implementation 'org.redisson:redisson:3.43.0'
}

jar {
    enabled = false
}


tasks.named('test') {
    useJUnitPlatform()
}
